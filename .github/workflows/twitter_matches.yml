name: Twitter Match Announcements

concurrency: social

on:
  workflow_dispatch:
  push:
    paths:
      - _spielergebnisse/**

env:
  TWITTER_OAUTH_SIGNATURE: ${{ secrets.TWITTER_OAUTH_SIGNATURE }}

jobs:
  New-Matches-for-Twitter:
    runs-on: ubuntu-latest
    outputs:
      matches: ${{steps.scanmatches.outputs.matches}} #array of matches not yet posted
      messages: ${{steps.messagesfortwitter.outputs.messages}} #array of messages to post
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
        with: # important to ensure fetch all history!
          fetch-depth: 0

      - name: Setup Git Config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Scan Matches #checks the git history and creates an array of all the matches that do not contain the word "twitter"
        id: scanmatches
        run: |
          cd _spielergebnisse
          declare matches=()
          for f in $(ls | tr '\n' '\n')
            do
              if [ -z "$(git log --follow --pretty=oneline --grep='twitter' -q -- $f)" ]
                then
                  echo "$f added to list of matches to post"
                  matches+=("$f")
                else
                  echo "$f already posted on Twitter"
              fi
            done
          echo "The following matches have not been posted: ${matches[*]}"
          echo "::set-output name=matches::${matches[*]}"

      - name: Mark matchfiles with string #change frontmatter to indicate that they have been posted on Twitter
        id: markfiles
        if: steps.scanmatches.outputs.matches != ''
        run: |
          cd _spielergebnisse
          declare matches=()
          echo ${{steps.scanmatches.outputs.matches}}
          for matchfile in ${{steps.scanmatches.outputs.matches}}
           do
            sed -i -e 's!posted-on-social: false!posted-on-social: true!g' $matchfile
            git add $matchfile
          done
          git commit -m "tagged as posted on twitter"

      - name: Messages for Twitter # set the last line of the match file as message for Twitter
        id: messagesfortwitter
        if: steps.markfiles.outcome == 'success'
        run: |
          cd _spielergebnisse
          declare messages=()
          echo 'Preparing the following matches for Twitter: ${{steps.scanmatches.outputs.matches}}'
          for matchfile in ${{steps.scanmatches.outputs.matches}}
           do
            message+=("$(tail -n 1 $matchfile)")
          done
          echo "::set-output name=messages::${messages[*]}"
          for message in ${{steps.messagesfortwitter.outputs.messages}}
           do
            echo "Message to share: $message"
          done

      - name: Git Push
        if: steps.messagesfortwitter.outcome == 'success'
        run: |
          git pull --quiet
          git push origin --all --quiet

  Post-to-Twitter:
    needs: New-Matches-for-Twitter
    if: needs.New-Matches-for-Twitter.outputs.messages != ''
    continue-on-error: true # if one match fails, the flow should continue
    strategy:
      matrix:
        messages:
          - ${{needs.New-Matches-for-Twitter.outputs.messages}}
    runs-on: ubuntu-latest
    steps:
      - name: Twitter Post
        uses: infraWay/tweet-action@v1.0.1
        with:
          status: ${{matrix.messages}}
          api_key: ${{ secrets.TWITTER_API_KEY }}
          api_key_secret: ${{ secrets.TWITTER_API_KEY_SECRET }}
          access_token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          access_token_secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
