name: NEW Rankings & Matches Update

on:
  push:
    paths:
      - "_sams/xml/rankings/**"
      - "_sams/xml/matches/**"

env:
  GITHUB_TOKEN: ${{ secrets.BK_GH_PAT }}
  DIR_SOURCE: _sams/xml/
  RANKINGS_SOURCE: _sams/xml/rankings/
  MATCHES_SOURCE: _sams/xml/matches/
  RANKINGS_TARGET: _rankings/
  MATCHES_TARGET: _matches/

jobs:

  Updated-XML:
    runs-on: ubuntu-latest
    outputs:
      files-updated: ${{ steps.files.outputs.added_modified }} # contains each file modified by the commit who triggered this run
    steps:
      - name: Identify Modified Files
        id: files
        uses: masesgroup/retrieve-changed-files@v2
        with:
          format: 'json'

  #############################
  ### FILTER AND PROCESSING ###
  #############################
  Process-Rankings-and-Matches:
    needs: Updated-XML
    continue-on-error: true # if one update fails, the flow should continue
    strategy:
      matrix:
        ids: ${{fromJSON(needs.Updated-XML.outputs.files-updated)}}
    runs-on: ubuntu-latest
    steps:
      - name: Filter & Fetch Rankings and Matches
        id: filtered_fetch
        if: contains( matrix.ids, env.RANKINGS_SOURCE ) || contains( matrix.ids, env.MATCHES_SOURCE )
        # checks if the file is either a ranking or match
        run: |
          mkdir -p ${{env.RANKINGS_SOURCE}}
          mkdir -p ${{env.MATCHES_SOURCE}}
          curl -o ${{matrix.ids}} "https://raw.githubusercontent.com/terijaki/vcmuellheim/main/${{matrix.ids}}"
          echo "${{matrix.ids}}"

      - name: Isolate ID # Isolate just the ID from the file (remove path and file extension)
        if: ${{ steps.filtered_fetch.conclusion == 'success' }}
        id: isolate_id
        run: |
          targetfile=${{matrix.ids}}
          targetfile=$(echo $targetfile | sed -e 's!\.xml!!')
          targetfile=$(echo $targetfile | sed -e 's!${{env.RANKINGS_SOURCE}}!!')
          targetfile=$(echo $targetfile | sed -e 's!${{env.MATCHES_SOURCE}}!!')
          echo $targetfile

      ########################
      ### RANKINGS PROCESS ###
      ########################
      - name: RANKING PROCESS
        if: contains( matrix.ids, env.RANKINGS_SOURCE )
        run: echo "Lets process rankings!"
      - name: Add timestamp to Rankings XML
        # includes a timestamp at the end of the files in the German format to be used in the frontend
        id: timestamp_rankings
        if: contains( matrix.ids, env.RANKINGS_SOURCE )
        run: |
          echo $(TZ=Europe/Berlin date +%d.%m.%Y)', '$(TZ=Europe/Berlin date +%H:%M)
          sed -i -e 's!</rankings>!<timestamp>'$(TZ=Europe/Berlin date +%d.%m.%Y)', '$(TZ=Europe/Berlin date +%H:%M)' Uhr</timestamp></rankings>!g' ${{matrix.ids}}
        
      - name: Get rankings.xslt template # Get the xslt template
        if: ${{ steps.timestamp_rankings.conclusion == 'success' }}
        id: rankings_xslt_template
        run: curl -o rankings.xslt "https://raw.githubusercontent.com/terijaki/vcmuellheim/main/_sams/xslt/rankings.xslt"

      - name: Transform XML # Push the XML through the XSLT
        if: ${{ steps.rankings_xslt_template.conclusion == 'success' }}
        id: xslt_rankings
        run: |
          mkdir -p ${{env.RANKINGS_TARGET}}
          sudo apt-get install xsltproc
          xsltproc rankings.xslt ${{matrix.ids}} > ${{env.RANKINGS_TARGET}}$targetfile.html

      - name: Upload Artifact (Rankings)
        if: ${{ steps.xslt_rankings.conclusion == 'success' }}
        id: upload_rankings
        uses: actions/upload-artifact@v3
        with:
          name: rankings
          path: ${{env.RANKINGS_SOURCE}}

      #######################
      ### MATCHES PROCESS ###
      #######################
      - name: MATCHES PROCESS
        if: contains( matrix.ids, env.MATCHES_SOURCE )
        run: echo "Lets process matches!"
      - name: Add timestamp to Matches XML
        # includes a timestamp at the end of the files in the German format to be used in the frontend
        id: timestamp_matches
        if: contains( matrix.ids, env.MATCHES_SOURCE )
        run: |
          echo $(TZ=Europe/Berlin date +%d.%m.%Y)', '$(TZ=Europe/Berlin date +%H:%M)
          sed -i -e 's!</matches>!<timestamp>'$(TZ=Europe/Berlin date +%d.%m.%Y)', '$(TZ=Europe/Berlin date +%H:%M)' Uhr</timestamp></matches>!g' ${{matrix.ids}}

      - name: Upload Artifact (Matches)
        if: ${{ steps.timestamp_matches.conclusion == 'success' }}
        id: upload_matches
        uses: actions/upload-artifact@v3
        with:
          name: matches
          path: ${{ env.MATCHES_SOURCE }}


  #############################
  ### GIT UPDATE PROCESS ###
  #############################
  Git-Update:
    needs: Process-Rankings-and-Matches
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
        with:
          token: ${{env.GITHUB_TOKEN}}
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ${{ env.DIR_SOURCE }}

      - name: Setup Git Config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Commit Rankings
        continue-on-error: true # don't throw an error as there won't always be changes
        run: |
          git add "${{env.RANKINGS_TARGET}}*"
          git commit -m "rankings update"

      - name: Commit Matching
        continue-on-error: true # don't throw an error as there won't always be changes
        run: |
          git add "${{env.MATCHES_TARGET}}*"
          git commit -m "matches update"

      - name: Git Push
        continue-on-error: true # don't throw an error as there won't always be changes
        run: |
          git pull --rebase
          git push origin --all --quiet