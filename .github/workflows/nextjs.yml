name: Deploy Next.js site to Pages

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths-ignore:
      - ".github/**"
      - "_sams/**"
      - "inbox/**"
      - "_inbox/**"
  schedule:
    - cron: 30 2 * * TUE # At 02:30 on Tuesday
    - cron: 15,45 09-20 * JAN-APR,OCT-DEC 0,6,5 # At minute 15 & 45 past every hour, from 12 through 20 on Sunday & Saturday, from October through April /// TEMPORARY FRIDAYS AS WELL

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  SAMS_FOLDER: "data/sams"
  SAMS_MATCHSERIES_JSON: "data/sams/matchSeries.json"
  IMAGES_FOLDER: "public/images"

jobs:
  # Build jobs
  build:
    runs-on: ubuntu-latest
    outputs:
      build_status: ${{ steps.build_status.outputs.status }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npm run" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: SAMS Update
        id: sams_update
        run: npx tsx --env-file=.env.local --env-file=.env app/utils/samsUpdateTasks.ts
        env:
          SAMS_API: ${{ secrets.SAMS_API }}

      - name: Commit SAMS Files
        id: sams_git
        continue-on-error: true
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

          if [ -z "$(git stage ${{ env.SAMS_MATCHSERIES_JSON }} --dry-run)" ]
          then
            echo "🌈 Match Series up to date."
          else
            echo "🕵️ Match Series changed."
            git add ${{ env.SAMS_MATCHSERIES_JSON }} --force || true
            git commit -m "automated deployment update" || true
          fi

          git add ${{ env.SAMS_FOLDER }} || true
          if [ -z "$(git stage ${{ env.SAMS_FOLDER }} --dry-run)" ]
          then
            echo "🌈 Club data up to date.."
          else
            echo "🕵️ Club changes detected. Pushing to repository."
            git commit -m "automated deployment update"
            git push origin --all --quiet --force
            echo "status=updated" >> $GITHUB_OUTPUT
          fi

      - name: Build with Next.js
        id: next_build
        if: ${{ github.event.schedule }} != '15,45 09-20 * JAN-APR,OCT-DEC 0,6,5' || (${{ github.event.schedule }} == '15,45 09-20 * JAN-APR,OCT-DEC 0,6,5' && ${{ steps.sams_git.outputs.status }} == 'updated')
        run: ${{ steps.detect-package-manager.outputs.runner }} build

      - name: Build Status
        id: build_status
        run: echo "status=ok" >> $GITHUB_OUTPUT

      - name: Commit Optimized Images
        if: steps.next_build.conclusion == 'success'
        continue-on-error: true
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git add ${{ env.IMAGES_FOLDER }} --force
          git commit -m "automated deployment update" || true
          git push origin --all --quiet --force || true

      - name: Upload artifact
        if: steps.next_build.conclusion == 'success'
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.outputs.build_status }} == 'ok'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
