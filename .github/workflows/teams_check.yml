name: Verify Team IDs

concurrency:
  group: "teams-check"
  cancel-in-progress: false

on:
  push:
    paths:
      - "_sams/xml/club.xml"
  workflow_dispatch:

env:
  SAMS_CLUB_FILE: _sams/xml/club.xml # the file containing the current team IDs
  TEAMS_FOLDER: _teams/ # the folder containing the teams on our website

jobs:
  Verify-Teams:
    runs-on: ubuntu-latest
    outputs:
      outdated-teams: ${{ steps.check-teams.outputs.outdated }} # receives the outdated team info
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Check Team still exists
        id: check-teams
        run: |
          echo "Starting process to check if team ID need attention..."
          outdated=("")
          for team in $(ls $TEAMS_FOLDER)
            do
              this_team_id=$(grep -e "sbvv_id" "$TEAMS_FOLDER$team" | sed 's/[^0-9]*//g')
              if [[ "$this_team_id" -gt 3 ]]; then
                check_club=$(grep -e $this_team_id $SAMS_CLUB_FILE)
                check_existence=${#check_club}
                if [[ -z "$check_club" ]]; then
                  echo "$team ($this_team_id) no longer present in club.xml!"
                else
                  echo "$team ($this_team_id) still present in club.xml"
                  outdated+=("$team::$this_team_id")
                fi
              fi
            done
          echo ${outdated[@]}
          if [[ -z "$outdated" ]]; then
            echo "outdated=[$outdated]" >> $GITHUB_OUTPUT
          else
            echo "outdated=none" >> $GITHUB_OUTPUT
          fi
        # loop through files in the teams folder and check for sbvv_id
        # for every Id found, check if the ID is still present in the SAMS club.xml
        # when the ID is no longer present, add it to an array
        # the array is then converted from bash array to JSON array, which serves as a matrix for the follow up job 



  Create-Issue:
    runs-on: ubuntu-latest
    needs: Verify-Teams
    if: needs.Verify-Teams.outputs.outdated-teams != 'none'
    continue-on-error: true # if one update fails, the flow should continue
    strategy:
      matrix:
       team: ${{fromJSON(needs.Verify-Teams.outputs.outdated-teams)}}
    steps:
      - name: debug
        run: |
          echo ${{matrix.team}}
# separate filename and team id via regex


#      - uses: nashmaniac/create-issue-action@v1.1
#        name: Create Issue Action
#        with:
#          title: Team ID removed from club.xml
#          token: ${{secrets.GITHUB_TOKEN}}
#          body: TEAM ID of TEAM-NAME was no longer found in club.xml