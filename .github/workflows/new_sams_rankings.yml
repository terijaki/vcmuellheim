name: NEW Rankings Update

on:
  push:
    paths:
      - "_sams/xml/rankings/**"
      - "_sams/xml/matches/**"

env:
  GITHUB_TOKEN: ${{ secrets.BK_GH_PAT }}
  RANKINGS_SOURCE: _sams/xml/rankings
  MATCHES_SOURCE: _sams/xml/matches
  RANKINGS_TARGET: _rankings
  MATCHES_TARGET: _matches

jobs:
  Updated-XML:
    runs-on: ubuntu-latest
    outputs:
      files-updated: ${{ steps.files.outputs.added_modified }} # contains each file modified by the commit who triggered this run
    steps:
      - name: Identify Modified Files
        id: files
        uses: masesgroup/retrieve-changed-files@v2
        with:
          # Format of the steps output context.
          # Can be 'space-delimited', 'csv', or 'json'.
          # Default: 'space-delimited'
          format: 'json'

  Rankings:
    needs: Updated-XML
    continue-on-error: true # if one update fails, the flow should continue
    strategy:
      matrix:
        ids: ${{fromJSON(needs.Updated-XML.outputs.files-updated)}}
    runs-on: ubuntu-latest
    steps:
      - name: Filter & Fetch Rankings and Matches
        id: filtered_fetch
        if: contains( matrix.ids, env.RANKINGS_SOURCE ) || contains( matrix.ids, env.MATCHES_SOURCE )
        # checks if the file is either a ranking or match
        run: |
          mkdir -p ${{ env.RANKINGS_SOURCE }}
          mkdir -p ${{ env.MATCHES_SOURCE }}
          curl -o ${{matrix.ids}} "https://raw.githubusercontent.com/terijaki/vcmuellheim/main/${{matrix.ids}}"
          echo "${{matrix.ids}}"

      - name: Add timestamp to Rankings XML
        # includes a timestamp in German format
        # this is later displayed on the homepage as last update date
        if: contains( matrix.ids, env.RANKINGS_SOURCE )
        run: sed -i -e 's!</rankings>!<timestamp>'$(TZ=Europe/Berlin date +%d.%m.%Y)', '$(TZ=Europe/Berlin date +%H:%M)' Uhr</timestamp></rankings>!g' ${{matrix.ids}}


      - name: Upload Artifact (Rankings)
        if: ${{ steps.filtered_fetch.conclusion == 'success' }}
        uses: actions/upload-artifact@v3
        with:
          name: rankings
          path: ${{ env.RANKINGS_SOURCE }}
      - name: Upload Artifact (Matches)
        if: ${{ steps.filtered_fetch.conclusion == 'success' }}
        uses: actions/upload-artifact@v3
        with:
          name: matches
          path: ${{ env.MATCHES_SOURCE }}